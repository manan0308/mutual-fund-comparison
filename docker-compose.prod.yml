version: '3.8'

# Production Docker Compose Configuration
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

services:
  database:
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mutual_fund_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/pgdata
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    command: postgres -c 'max_connections=200' -c 'shared_buffers=256MB' -c 'effective_cache_size=1GB'

  backend:
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN:-https://yourdomain.com}
      - LOG_LEVEL=warn
    volumes:
      - backend_logs:/app/logs
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
      restart_policy:
        condition: on-failure
        max_attempts: 3

  frontend:
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-https://api.yourdomain.com}
      - REACT_APP_ENV=production
      - REACT_APP_ENABLE_ANALYTICS=true
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  redis:
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data_prod:/data
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  nginx:
    profiles: []  # Always run in production
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'

  # SSL Certificate Management
  certbot:
    image: certbot/certbot
    container_name: mf_certbot
    volumes:
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    depends_on:
      - nginx
    profiles:
      - ssl

volumes:
  postgres_data_prod:
    driver: local
  redis_data_prod:
    driver: local
  backend_logs:
    driver: local
  certbot_www:
    driver: local
  certbot_conf:
    driver: local